# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Auto release dev build

on:
  push:
    branches: [ add_github_actions_auto_release ]

jobs:
  build:

    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        
    steps:
    - name: Increase Version in manifest.json
      shell: cmd
      run: |

        Get-Command "jq.exe"
        jq.exe --version
        echo %cd%
        echo increament last version number and save it in new_version.txt
        jq.exe (.version^|sub(\"[0-9]?.[0-9]?.[0-9]?.\";\"\")^|tonumber+1) < plugin/manifest.json > new_version.txt
        set /p Build=<new_version.txt

        echo save complete version number in new_version.txt
        jq.exe (.version^|split(\".\")^|map(tonumber)^|(.[3]^|=%Build%)^|map(tostring)^|join(\".\")) < plugin/manifest.json > new_version.txt
        set /p Build=<new_version.txt

        echo save new_manifest.json with new version number
        jq.exe (.version^|=\"%Build%\") plugin/manifest.json > new_manifest.json
        echo move new_manifest.json to manifest.json
        move /y new_manifest.json plugin/manifest.json

        
        echo do some configuration
        git status




    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install
    - run: npm run lint
        
    - name: Release latest developer build
      run: |
        
        # create a developer-build release notes:
        echo "Create developer-build release notes."
        echo "Latest developer build of WebToEpub with the latest fixes." >> output.txt
        echo "" >> output.txt
        echo "This release was created on **$(date +'%Y-%m-%d %H:%M')** and may contain unexpected bugs." >> output.txt
        echo "To install the Addon pick the file suitable for you," >> output.txt
        echo "*WebToEpubx.x.x.x.xpi for Firefox" >> output.txt
        echo "*WebToEpubx.x.x.x.zip for Chrome" >> output.txt
        echo "follow the [How to install from Source (for people who are not developers)](https://github.com/dteviot/WebToEpub/tree/ExperimentalTabMode#user-content-how-to-install-from-source-for-people-who-are-not-developers) instructions" >> output.txt
        echo "" >> output.txt
        echo "**Full Changelog**: https://github.com/dteviot/WebToEpub/compare/0.0.0.159...ExperimentalTabMode" >> output.txt

        # delete old developer-build release:
        echo "delete old developer-build release."
        gh release delete developer-build

        # create developer-build release:
        echo "create developer-build release."
        gh release create developer-build -p -t "Latest developer build" --target "ExperimentalTabMode" -F output.txt
        
        # add files to release.
        gh release upload developer-build eslint/*.xpi
        gh release upload developer-build eslint/*.zip
      env:
          GH_TOKEN: ${{ github.token }}
        